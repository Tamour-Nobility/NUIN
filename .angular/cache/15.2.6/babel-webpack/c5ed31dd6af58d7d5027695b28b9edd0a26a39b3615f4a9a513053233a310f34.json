{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let ColorPickerComponent = /*#__PURE__*/(() => {\n  class ColorPickerComponent {\n    constructor() {\n      this.select = new EventEmitter();\n      this.presetColors = ['#fff', '#000', '#2889e9', '#e920e9', '#fff500', 'rgb(236,64,64)'];\n    }\n    ngOnInit() {}\n    onColorSelect(event) {\n      this.select.emit(event);\n    }\n  }\n  ColorPickerComponent.ɵfac = function ColorPickerComponent_Factory(t) {\n    return new (t || ColorPickerComponent)();\n  };\n  ColorPickerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ColorPickerComponent,\n    selectors: [[\"color-picker\"]],\n    inputs: {\n      color: \"color\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    decls: 4,\n    vars: 14,\n    consts: [[1, \"color\", 3, \"ngClass\", \"colorPicker\", \"cpOKButton\", \"cpSaveClickOutside\", \"cpOKButtonClass\", \"cpCancelButton\", \"cpCancelButtonClass\", \"cpOutputFormat\", \"cpPresetColors\", \"cpOKButtonText\", \"colorPickerChange\", \"colorPickerSelect\"]],\n    template: function ColorPickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵlistener(\"colorPickerChange\", function ColorPickerComponent_Template_span_colorPickerChange_0_listener($event) {\n          return ctx.color = $event;\n        })(\"colorPickerSelect\", function ColorPickerComponent_Template_span_colorPickerSelect_0_listener($event) {\n          return ctx.onColorSelect($event);\n        });\n        i0.ɵɵelementStart(1, \"span\")(2, \"a\");\n        i0.ɵɵtext(3, \"Select Color\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"background\", ctx.color);\n        i0.ɵɵproperty(\"ngClass\", ctx.color ? \"border\" : \"no-border\")(\"colorPicker\", ctx.color)(\"cpOKButton\", true)(\"cpSaveClickOutside\", false)(\"cpOKButtonClass\", \"btn btn-primary btn-xs\")(\"cpCancelButton\", true)(\"cpCancelButtonClass\", \"btn btn-default btn-xs\")(\"cpOutputFormat\", \"hex\")(\"cpPresetColors\", ctx.presetColors)(\"cpOKButtonText\", \"Save\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"visibility\", ctx.color ? \"hidden\" : \"visible\");\n      }\n    },\n    styles: [\".color[_ngcontent-%COMP%]{cursor:pointer}.color.border[_ngcontent-%COMP%]{border:solid 2px #12a45159}.color.no-border[_ngcontent-%COMP%]{border:none}\"]\n  });\n  return ColorPickerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}