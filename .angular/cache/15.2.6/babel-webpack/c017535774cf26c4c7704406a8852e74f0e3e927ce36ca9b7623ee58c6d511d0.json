{"ast":null,"code":"var _a;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Directive, ElementRef, HostListener } from \"@angular/core\";\nimport { NgControl } from '@angular/forms';\nlet NullDefaultValueDirective = class NullDefaultValueDirective {\n  constructor(el, control) {\n    this.el = el;\n    this.control = control;\n  }\n  onEvent(target) {\n    this.setNull(target);\n  }\n  onkeyup(target) {\n    this.setNull(target);\n  }\n  setNull({\n    value\n  }) {\n    if (value === '') this.control.viewToModelUpdate(null);\n  }\n};\n__decorate([HostListener('input', ['$event.target']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [HTMLInputElement]), __metadata(\"design:returntype\", void 0)], NullDefaultValueDirective.prototype, \"onEvent\", null);\n__decorate([HostListener('keyup', ['$event.target']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [HTMLInputElement]), __metadata(\"design:returntype\", void 0)], NullDefaultValueDirective.prototype, \"onkeyup\", null);\nNullDefaultValueDirective = __decorate([Directive({\n  selector: 'input[nullValue]'\n}), __metadata(\"design:paramtypes\", [ElementRef, typeof (_a = typeof NgControl !== \"undefined\" && NgControl) === \"function\" ? _a : Object])], NullDefaultValueDirective);\nexport { NullDefaultValueDirective };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}