{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let NoSpace = /*#__PURE__*/(() => {\n  class NoSpace {\n    constructor(el) {\n      this.el = el;\n      this.inputElement = el.nativeElement;\n    }\n    onkeydown(e) {\n      if (e.keyCode == 32) {\n        e.preventDefault();\n      }\n    }\n    onPaste(e) {\n      e.preventDefault();\n      const pastedData = e.clipboardData.getData('text').trim().replace(/\\s/g, '');\n      document.execCommand('insertText', false, pastedData);\n    }\n    ondrop(e) {\n      e.preventDefault();\n      const draggedData = e.dataTransfer.getData('text').replace(/\\s/g, '');\n      document.execCommand('insertText', false, draggedData);\n    }\n  }\n  NoSpace.ɵfac = function NoSpace_Factory(t) {\n    return new (t || NoSpace)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  NoSpace.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: NoSpace,\n    selectors: [[\"\", \"noSpace\", \"\"]],\n    hostBindings: function NoSpace_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function NoSpace_keydown_HostBindingHandler($event) {\n          return ctx.onkeydown($event);\n        })(\"paste\", function NoSpace_paste_HostBindingHandler($event) {\n          return ctx.onPaste($event);\n        })(\"drop\", function NoSpace_drop_HostBindingHandler($event) {\n          return ctx.ondrop($event);\n        });\n      }\n    }\n  });\n  return NoSpace;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}