{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { APIService } from '../../components/services/api.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../components/services/api.service\";\nexport let ClaimService = /*#__PURE__*/(() => {\n  class ClaimService {\n    constructor(apiService, toaster) {\n      this.apiService = apiService;\n      this.toaster = toaster;\n      this.isOpen = false;\n      this.ClaimModel = new EventEmitter();\n      this.change = new EventEmitter();\n      this.claimTabActive = new Subject();\n      this.claimassigneenotifications = new Subject();\n      this.accountassigneenotifications = new Subject();\n      this.claimuser = [];\n      this.accountuser = [];\n    }\n    toggle() {\n      this.isOpen = !this.isOpen;\n      this.change.emit(this.isOpen);\n    }\n    GetUsersClaimNotifications(PracticeCode, check) {\n      this.apiService.getDataWithoutSpinner(`/ClaimAssignment/GetAllAssignedClaimsNotifications?practice_code=${PracticeCode}`).subscribe(res => {\n        if (res.Status == 'Success') {\n          this.claimuser = res.Response;\n          this.claimassigneenotifications.next(this.claimuser.length);\n          if (check == false && this.claimuser.length != 0) {\n            this.toaster.success(\"You have \" + this.claimuser.length + \" Claims Pending in Tasks\", \"Claim Assignment\");\n          } else {\n            console.log(\"zero\");\n          }\n        } else {\n          this.claimassigneenotifications.next(0);\n        }\n      });\n    }\n    GetUsersAccountNotifications(PracticeCode, check) {\n      this.apiService.getDataWithoutSpinner(`/ClaimAssignment/GetAllAssignedAccountsNotifications?practice_code=${PracticeCode}`).subscribe(res => {\n        if (res.Status == 'Success') {\n          this.accountuser = res.Response;\n          this.accountassigneenotifications.next(this.accountuser.length);\n          if (check == false && this.accountuser.length != 0) {\n            this.toaster.success(\"You have \" + this.accountuser.length + \" Accounts Pending in Tasks \", \"Account Assignment\");\n          } else {\n            console.log(\"zero\");\n          }\n        } else {\n          this.accountassigneenotifications.next(0);\n        }\n      });\n    }\n  }\n  ClaimService.ɵfac = function ClaimService_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n  ClaimService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClaimService,\n    factory: ClaimService.ɵfac\n  });\n  return ClaimService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}