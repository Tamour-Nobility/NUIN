{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { APIService } from '../../components/services/api.service';\nimport { GvarsService } from '../G_vars/gvars.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../components/services/api.service\";\nimport * as i2 from \"../G_vars/gvars.service\";\nexport let AlertService = /*#__PURE__*/(() => {\n  class AlertService {\n    constructor(apiService, Gv) {\n      this.apiService = apiService;\n      this.Gv = Gv;\n      this.alertDataSubject = new BehaviorSubject(null);\n    }\n    getAlertData() {\n      debugger;\n      return this.alertDataSubject.asObservable();\n    }\n    setAlertData(data) {\n      debugger;\n      this.alertDataSubject.next(data);\n    }\n    // getAlert(): void {\n    //   debugger\n    //   this.apiService.getData('/Alert/GetAlertForPatient?patientaccount=' + this.Gv.Patient_Account).subscribe(data => {\n    //     if (data.Status === 'Success') {\n    //       this.setAlertData(data.Response);\n    //     }\n    //   });\n    // }\n    getAlert() {\n      debugger;\n      // Return the observable directly\n      return this.apiService.getData('/Alert/GetAlertForPatient?patientaccount=' + this.Gv.Patient_Account);\n    }\n    getLoginAlert() {\n      debugger;\n      // Return the observable directly\n      return this.apiService.getData('/Alert/GetLoginAlert');\n    }\n  }\n  AlertService.ɵfac = function AlertService_Factory(t) {\n    return new (t || AlertService)(i0.ɵɵinject(i1.APIService), i0.ɵɵinject(i2.GvarsService));\n  };\n  AlertService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AlertService,\n    factory: AlertService.ɵfac,\n    providedIn: 'root'\n  });\n  return AlertService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}