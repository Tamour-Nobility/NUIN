{"ast":null,"code":"import { ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { isNullOrUndefined } from 'util';\nimport { APIService } from '../../../components/services/api.service';\nimport { Common } from '../../../services/common/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../components/services/api.service\";\nfunction PatientStatementClaimsComponent_tr_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\", 17)(2, \"td\", 17);\n    i0.ɵɵelementStart(3, \"td\", 18);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 18);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\", 18);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 18);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 18);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\", 18);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\", 18);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\", 18);\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"noComma\");\n    i0.ɵɵpipe(22, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\", 18);\n    i0.ɵɵtext(24);\n    i0.ɵɵpipe(25, \"noComma\");\n    i0.ɵɵpipe(26, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pt_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(pt_r4.claim_no);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 9, pt_r4.bill_date, \"MM/dd/yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 12, pt_r4.dos, \"MM/dd/yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(pt_r4.pri_status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pt_r4.sec_status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pt_r4.oth_status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pt_r4.pat_status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", i0.ɵɵpipeBind1(21, 15, i0.ɵɵpipeBind2(22, 17, pt_r4.amt_due, \"1.2\")), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"$\", i0.ɵɵpipeBind1(25, 20, i0.ɵɵpipeBind2(26, 22, pt_r4.amt_paid, \"1.2\")), \"\");\n  }\n}\nfunction PatientStatementClaimsComponent_button_43_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function PatientStatementClaimsComponent_button_43_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onPatientStatementHidden($event));\n    });\n    i0.ɵɵtext(1, \"Done\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientStatementClaimsComponent_button_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function PatientStatementClaimsComponent_button_44_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.downloadPatientStatment($event));\n    });\n    i0.ɵɵtext(1, \"Download\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let PatientStatementClaimsComponent = /*#__PURE__*/(() => {\n  class PatientStatementClaimsComponent {\n    constructor(_apiService, chRef) {\n      this._apiService = _apiService;\n      this.chRef = chRef;\n      this.onHidden = new EventEmitter();\n      this.claimsList = [];\n      this.ExcludedClaimsIds = [];\n    }\n    ngOnInit() {}\n    show() {\n      this.patientStatement.show();\n    }\n    hide() {\n      this.patientStatement.hide();\n    }\n    onPatientStatementShown(event) {\n      if (!Common.isNullOrEmpty(this.PatientAccount)) {\n        this._apiService.getData(`/Demographic/GetPatientClaimsForStatement?PatientAccount=${this.PatientAccount}`).subscribe(res => {\n          if (res.Status == 'Success') {\n            if (this.dataTableStatement) {\n              this.dataTableStatement.destroy();\n            }\n            // res.Response.claimList.forEach(item => {\n            //   if (+item.Amt_Due > 0 && item.Pri_Status && (item.Pri_Status.toLowerCase() == 'n' || item.Pri_Status.toLowerCase() == 'r' || item.Pri_Status.toLowerCase() == 'b')) {\n            //     item.ResponsibleParty = 'Primary Insurance';\n            //   }\n            //   else if (+item.Amt_Due > 0 && item.Sec_Status && (item.Sec_Status.toLowerCase() == 'n' || item.Sec_Status.toLowerCase() == 'r' || item.Sec_Status.toLowerCase() == 'b')) {\n            //     item.ResponsibleParty = 'Secondary Insurance';\n            //   }\n            //   else if (+item.Amt_Due > 0 && item.Oth_Status && (item.Oth_Status.toLowerCase() == 'n' || item.Oth_Status.toLowerCase() == 'r' || item.Oth_Status.toLowerCase() == 'b')) {\n            //     item.ResponsibleParty = 'Other Insurance';\n            //   }\n            //   else if (+item.Amt_Due > 0 && item.Pat_Status && (item.Pat_Status.toLowerCase() == 'n' || item.Pat_Status.toLowerCase() == 'r' || item.Pat_Status.toLowerCase() == 'b')) {\n            //     item.ResponsibleParty = 'Patient';\n            //   }\n            //   else {\n            //     item.ResponsibleParty = '';\n            //   }\n            // });\n            this.claimsList = res.Response;\n            this.chRef.detectChanges();\n            const table = $('.dataTableStatement');\n            this.dataTableStatement = table.DataTable({\n              lengthMenu: [[5, 10, 15, 20], [5, 10, 15, 20]],\n              columnDefs: [{\n                'targets': 0,\n                'checkboxes': {\n                  'selectRow': true\n                }\n              }, {\n                className: 'control',\n                orderable: false,\n                targets: 1\n              }],\n              responsive: {\n                details: {\n                  type: 'column',\n                  target: 1\n                }\n              },\n              select: {\n                style: 'multi'\n              },\n              language: {\n                buttons: {\n                  emptyTable: \"No data available\"\n                },\n                select: {\n                  rows: \"\"\n                }\n              },\n              order: [2, 'asc']\n            });\n            this.MakeSelection();\n          }\n        });\n      }\n    }\n    MakeSelection() {\n      if (this.claimsList && this.claimsList.length > 0) {\n        let rowsLength = this.dataTableStatement.rows().count();\n        if (this.ExcludedClaimsIds.length == rowsLength) this.dataTableStatement.rows().deselect();else {\n          // this.dataTableStatement.cell(0,1).data();\n          // this.dataTableStatement.cells().count()\n          for (let r = 0; r < rowsLength; r++) {\n            if (!isNullOrUndefined(this.ExcludedClaimsIds.find(f => f == this.dataTableStatement.cell(r, 2).data()))) {\n              this.dataTableStatement.row(r).deselect();\n            } else this.dataTableStatement.row(r).select();\n          }\n        }\n      }\n    }\n    onPatientStatementHidden(event) {\n      let deselectedRows = this.dataTableStatement.rows({\n        selected: false\n      });\n      if (this.showDownloadBtn && deselectedRows[0].length == this.dataTableStatement.rows().count()) {\n        swal('Validation', 'Please Select Atleast One Claim', 'error');\n        return;\n      } else {\n        let deselectedClaimsIds = this.dataTableStatement.cells(deselectedRows.nodes(), 2).data();\n        for (let i = 0; i < deselectedClaimsIds.length; i++) {\n          if (this.ExcludedClaimsIds.findIndex(f => f == deselectedClaimsIds[i]) < 0) this.ExcludedClaimsIds.push(deselectedClaimsIds[i]);\n        }\n        let isAllExcluded = false;\n        if (this.dataTableStatement.rows().count() == this.ExcludedClaimsIds.length) {\n          isAllExcluded = true;\n        }\n        this.onHidden.emit({\n          PatientAccount: this.PatientAccount,\n          ExcludedClaimsIds: JSON.parse(JSON.stringify(this.ExcludedClaimsIds)),\n          PatientDeselected: isAllExcluded\n        });\n        this.ExcludedClaimsIds = [];\n        this.patientStatement.hide();\n      }\n    }\n    downloadPatientStatment(event) {\n      this.onPatientStatementHidden(event);\n    }\n  }\n  PatientStatementClaimsComponent.ɵfac = function PatientStatementClaimsComponent_Factory(t) {\n    return new (t || PatientStatementClaimsComponent)(i0.ɵɵdirectiveInject(i1.APIService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  PatientStatementClaimsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PatientStatementClaimsComponent,\n    selectors: [[\"app-patient-statement-claims\"]],\n    viewQuery: function PatientStatementClaimsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(ModalDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.patientStatement = _t.first);\n      }\n    },\n    inputs: {\n      PatientAccount: \"PatientAccount\",\n      showDownloadBtn: \"showDownloadBtn\",\n      ExcludedClaimsIds: \"ExcludedClaimsIds\"\n    },\n    outputs: {\n      onHidden: \"onHidden\"\n    },\n    decls: 45,\n    vars: 4,\n    consts: [[\"bsModal\", \"\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"dialog-nested-name1\", 1, \"modal\", \"fade\", 3, \"onShown\"], [\"patientStatement\", \"bs-modal\"], [1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-title\"], [1, \"btn-group\", \"pull-right\"], [1, \"modal-body\"], [1, \"table-responsive\"], [\"width\", \"100%\", 1, \"table\", \"table-striped\", \"table-hover\", \"table-bordered\", \"dataTableStatement\"], [1, \"center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [\"type\", \"button\", \"class\", \"btn btn-success btn-sm\", 3, \"click\", 4, \"ngIf\"], [\"width\", \"5%\"], [\"align\", \"center\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"click\"]],\n    template: function PatientStatementClaimsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"onShown\", function PatientStatementClaimsComponent_Template_div_onShown_0_listener($event) {\n          return ctx.onPatientStatementShown($event);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function PatientStatementClaimsComponent_Template_button_click_5_listener() {\n          i0.ɵɵrestoreView(_r9);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(_r0.hide());\n        });\n        i0.ɵɵelementStart(6, \"span\", 6);\n        i0.ɵɵtext(7, \"\\u00D7\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"h4\", 7);\n        i0.ɵɵtext(9, \"Patient Statement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"span\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 9)(14, \"div\", 10)(15, \"table\", 11)(16, \"thead\")(17, \"tr\");\n        i0.ɵɵelement(18, \"th\")(19, \"th\");\n        i0.ɵɵelementStart(20, \"th\", 12);\n        i0.ɵɵtext(21, \"Claim #\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\", 12);\n        i0.ɵɵtext(23, \"Bill Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\", 12);\n        i0.ɵɵtext(25, \"DOS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\", 12);\n        i0.ɵɵtext(27, \"Pri Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\", 12);\n        i0.ɵɵtext(29, \"Sec Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\", 12);\n        i0.ɵɵtext(31, \"Oth Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\", 12);\n        i0.ɵɵtext(33, \"Pat Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"th\", 12);\n        i0.ɵɵtext(35, \"Amount Due\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"th\", 12);\n        i0.ɵɵtext(37, \"Amount Paid\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"tbody\");\n        i0.ɵɵtemplate(39, PatientStatementClaimsComponent_tr_39_Template, 27, 25, \"tr\", 13);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(40, \"div\", 14)(41, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function PatientStatementClaimsComponent_Template_button_click_41_listener() {\n          i0.ɵɵrestoreView(_r9);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(_r0.hide());\n        });\n        i0.ɵɵtext(42, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(43, PatientStatementClaimsComponent_button_43_Template, 2, 0, \"button\", 16);\n        i0.ɵɵtemplate(44, PatientStatementClaimsComponent_button_44_Template, 2, 0, \"button\", 16);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate1(\"Account # \", ctx.PatientAccount, \"\");\n        i0.ɵɵadvance(27);\n        i0.ɵɵproperty(\"ngForOf\", ctx.claimsList);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showDownloadBtn);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showDownloadBtn);\n      }\n    },\n    encapsulation: 2\n  });\n  return PatientStatementClaimsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}