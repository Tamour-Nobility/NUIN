{"ast":null,"code":"var _a, _b;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component, ChangeDetectorRef, Input, Output, EventEmitter } from '@angular/core';\nimport { SearchCriteria } from '../../../setups/guarantors/classes/request';\nimport { APIService } from '../../../components/services/api.service';\nimport { Router } from '@angular/router';\nimport { Common } from '../../../services/common/common';\nimport { BaseComponent } from '../../../core/base/base.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { NO_SEARCH_CRITRIA } from '../../../constants/messages';\nlet ListGuarantorsSharedComponent = class ListGuarantorsSharedComponent extends BaseComponent {\n  constructor(chRef, API, toasterService, router) {\n    super();\n    this.chRef = chRef;\n    this.API = API;\n    this.toasterService = toasterService;\n    this.router = router;\n    this.onSelectGuarantor = new EventEmitter();\n    this.isSearchInitiated = false;\n    this.placeholderGS = 'MM/DD/YYYY';\n    this.today = new Date();\n    this.myDatePickerOptions = {\n      dateFormat: 'mm/dd/yyyy',\n      height: '25px',\n      width: '100%',\n      disableSince: {\n        year: this.today.getFullYear(),\n        month: this.today.getMonth() + 1,\n        day: this.today.getDate() + 1\n      }\n    };\n    this.SearchCriteria = new SearchCriteria();\n    this.RequestModel = [];\n  }\n  ngOnInit() {}\n  searchGurantorbyKey(event) {\n    if (event.keyCode == 13) {\n      //Enter key\n      this.searchGurantor();\n    }\n  }\n  ClearSearchFields() {\n    this.isSearchInitiated = false;\n    if (this.dataTableGuarantor) {\n      this.dataTableGuarantor.destroy();\n    }\n    this.RequestModel = [];\n    this.chRef.detectChanges();\n    this.dataTableGuarantor = $('.dataTableGuarantor').DataTable({\n      columnDefs: [{\n        orderable: false,\n        targets: -1\n      }],\n      language: {\n        emptyTable: \"No data available\"\n      }\n    });\n    this.SearchCriteria = new SearchCriteria();\n  }\n  searchGurantor() {\n    if (!Common.isNullOrEmpty(this.SearchCriteria.Response.Guarant_Fname) || !Common.isNullOrEmpty(this.SearchCriteria.Response.Guarant_Lname) || !Common.isNullOrEmpty(this.SearchCriteria.Response.Guarant_Dob) || !Common.isNullOrEmpty(this.SearchCriteria.Response.Guarant_Home_Phone) || !Common.isNullOrEmpty(this.SearchCriteria.Response.Guarant_City) || !Common.isNullOrEmpty(this.SearchCriteria.Response.Guarant_State) || !Common.isNullOrEmpty(this.SearchCriteria.Response.Guarant_Zip) || !Common.isNullOrEmpty(this.SearchCriteria.Response.Guarant_Address)) {\n      this.isSearchInitiated = true;\n      this.API.PostData(`/Setup/GetGurantorsList`, this.SearchCriteria.Response, data => {\n        if (data.Status === 'Sucess') {\n          if (this.dataTableGuarantor) {\n            this.dataTableGuarantor.destroy();\n          }\n          this.RequestModel = data.Response;\n          this.chRef.detectChanges();\n          this.dataTableGuarantor = $('.dataTableGuarantor').DataTable({\n            columnDefs: [{\n              orderable: false,\n              targets: -1\n            }],\n            language: {\n              emptyTable: \"No data available\"\n            }\n          });\n        } else {\n          this.RequestModel = [];\n          swal('Failed', data.Status);\n        }\n      });\n    } else {\n      this.toasterService.warning(NO_SEARCH_CRITRIA, 'Guarantor Search');\n    }\n  }\n  dateMaskGS(event) {\n    var v = event.target.value;\n    if (v) {\n      if (v.match(/^\\d{2}$/) !== null) {\n        event.target.value = v + '/';\n      } else if (v.match(/^\\d{2}\\/\\d{2}$/) !== null) {\n        event.target.value = v + '/';\n      }\n    }\n  }\n  isnullorEmpty(str) {\n    if (str == undefined || str == null) return true;\n    if ($.trim(str) == \"\") return true;else return false;\n  }\n  onDateChangedDOB(event) {\n    this.SearchCriteria.Response.Guarant_Dob = event.formatted;\n  }\n  DeleteGurantor(index) {\n    let id = this.RequestModel[index].Guarantor_Code;\n    this.API.confirmFun('Confirmation', 'Do you want to delete this Guarantor?', () => {\n      this.API.getData(`/Setup/DeleteGurantor?GurantorId=${id}`).subscribe(response => {\n        if (response.Status === 'Sucess') {\n          swal('Delete Success', 'Guarantor has been deleted successfully.', 'success');\n        } else {\n          swal('Delete Failed', 'Failed to delete the Guarantor.', 'error');\n        }\n      }, () => {}, () => {\n        this.searchGurantor();\n      });\n    });\n  }\n  onEditClick(id) {\n    this.router.navigate([`guarantors/edit/${id}`]);\n  }\n  handleDoubleClick({\n    Guarantor_Code,\n    Guarant_Fname,\n    Guarant_Lname\n  }) {\n    if (!Common.isNullOrEmpty(this.caller)) {\n      this.onSelectGuarantor.emit({\n        for: this.caller,\n        data: {\n          guarantorName: Guarant_Lname + ' , ' + Guarant_Fname,\n          guarantorCode: Guarantor_Code\n        }\n      });\n      this.ClearSearchFields();\n      this.isSearchInitiated = false;\n    }\n  }\n  isPointerStyle() {\n    return !Common.isNullOrEmpty(this.caller);\n  }\n};\n__decorate([Input(), __metadata(\"design:type\", String)], ListGuarantorsSharedComponent.prototype, \"caller\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], ListGuarantorsSharedComponent.prototype, \"onSelectGuarantor\", void 0);\nListGuarantorsSharedComponent = __decorate([Component({\n  selector: 'app-list-guarantors-shared',\n  templateUrl: './list-guarantors-shared.component.html',\n  styleUrls: ['./list-guarantors-shared.component.css']\n}), __metadata(\"design:paramtypes\", [ChangeDetectorRef, APIService, typeof (_a = typeof ToastrService !== \"undefined\" && ToastrService) === \"function\" ? _a : Object, typeof (_b = typeof Router !== \"undefined\" && Router) === \"function\" ? _b : Object])], ListGuarantorsSharedComponent);\nexport { ListGuarantorsSharedComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}