{"ast":null,"code":"import { AuthService } from '../../services/auth/auth.service';\nimport { GvarsService } from '../../services/G_vars/gvars.service';\nimport { CurrentUserViewModel } from '../../models/auth/auth';\nimport { ChangePracticeComponent } from '../../shared/change-practice/change-practice.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth/auth.service\";\nimport * as i2 from \"../../services/G_vars/gvars.service\";\nfunction TopnavbarComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.loggedInUser.selectedPractice.PracticeName, \" \");\n  }\n}\nfunction TopnavbarComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    i0.ɵɵtextInterpolate1(\" \", \"No Assigned Practice\", \" \");\n  }\n}\nexport let TopnavbarComponent = /*#__PURE__*/(() => {\n  class TopnavbarComponent {\n    constructor(authService, gvService) {\n      this.authService = authService;\n      this.gvService = gvService;\n      this.loggedInUser = new CurrentUserViewModel();\n    }\n    ngOnInit() {\n      console.log(\"loggedInUser.selectedPractice.PracticeName\", this.loggedInUser.selectedPractice.PracticeName);\n      this.loggedInUser = this.gvService.currentUser;\n      $(document).ready(function () {\n        $('.navbar-minimalize').on('click', function (event) {\n          event.preventDefault();\n          $(\"body\").toggleClass(\"mini-navbar\");\n          SmoothlyMenu();\n        });\n      });\n      function SmoothlyMenu() {\n        if (!$('body').hasClass('mini-navbar') || $('body').hasClass('body-small')) {\n          // Hide menu in order to smoothly turn on when maximize menu\n          $('#side-menu').hide();\n          // For smoothly turn on menu\n          setTimeout(function () {\n            $('#side-menu').fadeIn(400);\n          }, 200);\n        } else if ($('body').hasClass('fixed-sidebar')) {\n          $('#side-menu').hide();\n          setTimeout(function () {\n            $('#side-menu').fadeIn(400);\n          }, 100);\n        } else {\n          // Remove all inline style from jquery fadeIn function to reset menu state\n          $('#side-menu').removeAttr('style');\n        }\n      }\n    }\n    onClickLogout() {\n      this.authService.Logout();\n    }\n    onChangePracticeClick() {\n      this.CP.show();\n    }\n  }\n  TopnavbarComponent.ɵfac = function TopnavbarComponent_Factory(t) {\n    return new (t || TopnavbarComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.GvarsService));\n  };\n  TopnavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TopnavbarComponent,\n    selectors: [[\"app-topnavbar\"]],\n    viewQuery: function TopnavbarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(ChangePracticeComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.CP = _t.first);\n      }\n    },\n    decls: 20,\n    vars: 1,\n    consts: [[1, \"row\", \"border-bottom\"], [\"role\", \"navigation\", 1, \"navbar\", \"navbar-static-top\", 2, \"margin-bottom\", \"0\"], [1, \"navbar-header\"], [1, \"navbar-minimalize\", \"minimalize-styl-2\", \"btn\", \"btn-custom\"], [1, \"fa\", \"fa-bars\"], [1, \"nav\", \"navbar-top-links\", \"navbar-right\"], [3, \"click\"], [1, \"fa\", \"fa-hospital-o\"], [3, \"ngTemplateOutlet\"], [\"hasPractice\", \"\"], [\"noPractice\", \"\"], [1, \"fa\", \"fa-sign-out\"]],\n    template: function TopnavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"nav\", 1)(2, \"div\", 2)(3, \"a\", 3);\n        i0.ɵɵelement(4, \"i\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ul\", 5);\n        i0.ɵɵelement(6, \"li\");\n        i0.ɵɵelementStart(7, \"li\", 6);\n        i0.ɵɵlistener(\"click\", function TopnavbarComponent_Template_li_click_7_listener() {\n          return ctx.onChangePracticeClick();\n        });\n        i0.ɵɵelementStart(8, \"a\");\n        i0.ɵɵelement(9, \"i\", 7);\n        i0.ɵɵelementContainer(10, 8);\n        i0.ɵɵtemplate(11, TopnavbarComponent_ng_template_11_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(13, TopnavbarComponent_ng_template_13_Template, 1, 1, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"li\")(16, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function TopnavbarComponent_Template_a_click_16_listener() {\n          return ctx.onClickLogout();\n        });\n        i0.ɵɵelement(17, \"i\", 11);\n        i0.ɵɵtext(18, \"Log out\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(19, \"app-change-practice\");\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(12);\n        const _r2 = i0.ɵɵreference(14);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.loggedInUser.selectedPractice.PracticeCode != undefined ? _r0 : _r2);\n      }\n    }\n  });\n  return TopnavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}