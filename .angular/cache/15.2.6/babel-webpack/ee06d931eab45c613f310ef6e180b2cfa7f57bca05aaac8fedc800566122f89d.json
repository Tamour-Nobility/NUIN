{"ast":null,"code":"import { enc, mode, AES, pad } from 'crypto-js';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport let EncryptDecryptService = /*#__PURE__*/(() => {\n  class EncryptDecryptService {\n    constructor() {\n      this.key = enc.Utf8.parse(environment.EncryptKey.toString());\n      this.iv = enc.Utf8.parse(environment.EncryptIV.toString());\n    }\n    // Methods for the encrypt and decrypt Using AES\n    encryptUsingAES256(text) {\n      let v = JSON.stringify(text);\n      var encrypted = AES.encrypt(enc.Utf8.parse(v), this.key, {\n        keySize: 128 / 8,\n        iv: this.iv,\n        mode: mode.CBC,\n        padding: pad.Pkcs7\n      });\n      return encrypted.toString();\n    }\n    decryptUsingAES256(decString) {\n      var decrypted = AES.decrypt(decString, this.key, {\n        keySize: 128 / 8,\n        iv: this.iv,\n        mode: mode.CBC,\n        padding: pad.Pkcs7\n      });\n      return decrypted.toString();\n    }\n  }\n  EncryptDecryptService.ɵfac = function EncryptDecryptService_Factory(t) {\n    return new (t || EncryptDecryptService)();\n  };\n  EncryptDecryptService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EncryptDecryptService,\n    factory: EncryptDecryptService.ɵfac,\n    providedIn: 'root'\n  });\n  return EncryptDecryptService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}